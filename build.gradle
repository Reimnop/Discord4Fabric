plugins {
    id 'fabric-loom' version '0.12-SNAPSHOT'
    id 'maven-publish'
}

archivesBaseName = "${project.jar_name}-${project.minecraft_version}"
version = project.mod_version
group = project.maven_group

repositories {
    // Add repositories to retrieve artifacts from in here.
    // You should only use this when depending on other mods because
    // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
    // See https://docs.gradle.org/current/userguide/declaring_repositories.html
    // for more information about repositories.

    maven { url "https://maven.nucleoid.xyz/" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation ("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}") {
        exclude group: "net.fabricmc.fabric-api", module: "fabric-gametest-api-v1"
    }

    include modImplementation("eu.pb4:placeholder-api:${project.placeholder_version}")

    include implementation("net.dv8tion:JDA:${project.jda_version}") {
        exclude module: "opus-java"
    }
    include implementation("club.minnced:discord-webhooks:${project.webhook_version}")
    include implementation("com.vdurmont:emoji-java:5.1.1")

    include implementation("me.lucko:spark-api:0.1-SNAPSHOT")

    // compat
    modImplementation "curse.maven:vanish-424123:${project.vanish_version}"

    // extra deps
    include "org.json:json:20160212"
    include "com.squareup.okio:okio:1.17.2"
    include "com.squareup.okhttp3:okhttp:3.13.0"
    include "org.apache.commons:commons-collections4:4.4"
    include "org.jetbrains.kotlin:kotlin-stdlib:1.6.21"
    include "com.neovisionaries:nv-websocket-client:2.14"
    include "net.sf.trove4j:trove4j:3.0.3"
    include "com.fasterxml.jackson.core:jackson-databind:2.13.1"
    include "com.fasterxml.jackson.core:jackson-annotations:2.13.1"
    include "com.fasterxml.jackson.core:jackson-core:2.13.1"
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
